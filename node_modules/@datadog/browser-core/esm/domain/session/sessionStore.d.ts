import { CookieCache, CookieOptions } from '../../browser/cookie';
import { Observable } from '../../tools/observable';
export interface SessionStore {
    expandOrRenewSession: () => void;
    expandSession: () => void;
    retrieveSession: () => SessionState;
    renewObservable: Observable<void>;
}
export interface SessionState {
    id?: string;
    created?: string;
    expire?: string;
    [key: string]: string | undefined;
}
export declare const SESSION_COOKIE_NAME = "_dd_s";
export declare const SESSION_EXPIRATION_DELAY: number;
export declare const SESSION_TIME_OUT_DELAY: number;
export declare function startSessionStore<TrackingType extends string>(options: CookieOptions, productKey: string, computeSessionState: (rawTrackingType?: string) => {
    trackingType: TrackingType;
    isTracked: boolean;
}): SessionStore;
export declare function persistSession(session: SessionState, cookie: CookieCache): void;
