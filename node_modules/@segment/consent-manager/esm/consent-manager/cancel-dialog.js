import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import Dialog from './dialog';
import { DefaultButton, RedButton } from './buttons';

var CancelDialog = function (_PureComponent) {
  _inherits(CancelDialog, _PureComponent);

  function CancelDialog() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, CancelDialog);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = CancelDialog.__proto__ || _Object$getPrototypeOf(CancelDialog)).call.apply(_ref, [this].concat(args))), _this), _this.handleSubmit = function (e) {
      var onConfirm = _this.props.onConfirm;


      e.preventDefault();
      onConfirm();
    }, _this.handleEsc = function (e) {
      var onConfirm = _this.props.onConfirm;

      // Esc key

      if (e.keyCode === 27) {
        onConfirm();
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(CancelDialog, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          innerRef = _props.innerRef,
          onBack = _props.onBack,
          title = _props.title,
          content = _props.content;


      var buttons = React.createElement(
        'div',
        null,
        React.createElement(
          DefaultButton,
          { type: 'button', onClick: onBack },
          'Go Back'
        ),
        React.createElement(
          RedButton,
          { type: 'submit' },
          'Yes, Cancel'
        )
      );

      return React.createElement(
        Dialog,
        {
          innerRef: innerRef,
          title: title,
          buttons: buttons,
          onSubmit: this.handleSubmit,
          width: '500px'
        },
        content
      );
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      document.body.addEventListener('keydown', this.handleEsc, false);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      document.body.removeEventListener('keydown', this.handleEsc, false);
    }
  }]);

  return CancelDialog;
}(PureComponent);

CancelDialog.displayName = 'CancelDialog';
CancelDialog.propTypes = {
  innerRef: PropTypes.func.isRequired,
  onBack: PropTypes.func.isRequired,
  onConfirm: PropTypes.func.isRequired,
  title: PropTypes.node.isRequired,
  content: PropTypes.node.isRequired
};
export default CancelDialog;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb25zZW50LW1hbmFnZXIvY2FuY2VsLWRpYWxvZy5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsIlB1cmVDb21wb25lbnQiLCJQcm9wVHlwZXMiLCJEaWFsb2ciLCJEZWZhdWx0QnV0dG9uIiwiUmVkQnV0dG9uIiwiQ2FuY2VsRGlhbG9nIiwiaGFuZGxlU3VibWl0Iiwib25Db25maXJtIiwicHJvcHMiLCJlIiwicHJldmVudERlZmF1bHQiLCJoYW5kbGVFc2MiLCJrZXlDb2RlIiwiaW5uZXJSZWYiLCJvbkJhY2siLCJ0aXRsZSIsImNvbnRlbnQiLCJidXR0b25zIiwiZG9jdW1lbnQiLCJib2R5IiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJkaXNwbGF5TmFtZSIsInByb3BUeXBlcyIsImZ1bmMiLCJpc1JlcXVpcmVkIiwibm9kZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPQSxLQUFQLElBQWVDLGFBQWYsUUFBbUMsT0FBbkM7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsT0FBT0MsTUFBUCxNQUFtQixVQUFuQjtBQUNBLFNBQVFDLGFBQVIsRUFBdUJDLFNBQXZCLFFBQXVDLFdBQXZDOztJQUVxQkMsWTs7Ozs7Ozs7Ozs7Ozs7bU1BNENuQkMsWSxHQUFlLGFBQUs7QUFBQSxVQUNYQyxTQURXLEdBQ0UsTUFBS0MsS0FEUCxDQUNYRCxTQURXOzs7QUFHbEJFLFFBQUVDLGNBQUY7QUFDQUg7QUFDRCxLLFFBRURJLFMsR0FBWSxhQUFLO0FBQUEsVUFDUkosU0FEUSxHQUNLLE1BQUtDLEtBRFYsQ0FDUkQsU0FEUTs7QUFHZjs7QUFDQSxVQUFJRSxFQUFFRyxPQUFGLEtBQWMsRUFBbEIsRUFBc0I7QUFDcEJMO0FBQ0Q7QUFDRixLOzs7Ozs2QkEvQ1E7QUFBQSxtQkFDb0MsS0FBS0MsS0FEekM7QUFBQSxVQUNBSyxRQURBLFVBQ0FBLFFBREE7QUFBQSxVQUNVQyxNQURWLFVBQ1VBLE1BRFY7QUFBQSxVQUNrQkMsS0FEbEIsVUFDa0JBLEtBRGxCO0FBQUEsVUFDeUJDLE9BRHpCLFVBQ3lCQSxPQUR6Qjs7O0FBR1AsVUFBTUMsVUFDSjtBQUFBO0FBQUE7QUFDRTtBQUFDLHVCQUFEO0FBQUEsWUFBZSxNQUFLLFFBQXBCLEVBQTZCLFNBQVNILE1BQXRDO0FBQUE7QUFBQSxTQURGO0FBSUU7QUFBQyxtQkFBRDtBQUFBLFlBQVcsTUFBSyxRQUFoQjtBQUFBO0FBQUE7QUFKRixPQURGOztBQVNBLGFBQ0U7QUFBQyxjQUFEO0FBQUE7QUFDRSxvQkFBVUQsUUFEWjtBQUVFLGlCQUFPRSxLQUZUO0FBR0UsbUJBQVNFLE9BSFg7QUFJRSxvQkFBVSxLQUFLWCxZQUpqQjtBQUtFLGlCQUFNO0FBTFI7QUFPR1U7QUFQSCxPQURGO0FBV0Q7Ozt3Q0FFbUI7QUFDbEJFLGVBQVNDLElBQVQsQ0FBY0MsZ0JBQWQsQ0FBK0IsU0FBL0IsRUFBMEMsS0FBS1QsU0FBL0MsRUFBMEQsS0FBMUQ7QUFDRDs7OzJDQUVzQjtBQUNyQk8sZUFBU0MsSUFBVCxDQUFjRSxtQkFBZCxDQUFrQyxTQUFsQyxFQUE2QyxLQUFLVixTQUFsRCxFQUE2RCxLQUE3RDtBQUNEOzs7O0VBMUN1Q1gsYTs7QUFBckJLLFksQ0FDWmlCLFcsR0FBYyxjO0FBREZqQixZLENBR1prQixTLEdBQVk7QUFDakJWLFlBQVVaLFVBQVV1QixJQUFWLENBQWVDLFVBRFI7QUFFakJYLFVBQVFiLFVBQVV1QixJQUFWLENBQWVDLFVBRk47QUFHakJsQixhQUFXTixVQUFVdUIsSUFBVixDQUFlQyxVQUhUO0FBSWpCVixTQUFPZCxVQUFVeUIsSUFBVixDQUFlRCxVQUpMO0FBS2pCVCxXQUFTZixVQUFVeUIsSUFBVixDQUFlRDtBQUxQLEM7ZUFIQXBCLFkiLCJmaWxlIjoiY2FuY2VsLWRpYWxvZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwge1B1cmVDb21wb25lbnR9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IERpYWxvZyBmcm9tICcuL2RpYWxvZydcbmltcG9ydCB7RGVmYXVsdEJ1dHRvbiwgUmVkQnV0dG9ufSBmcm9tICcuL2J1dHRvbnMnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENhbmNlbERpYWxvZyBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuICBzdGF0aWMgZGlzcGxheU5hbWUgPSAnQ2FuY2VsRGlhbG9nJ1xuXG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgaW5uZXJSZWY6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgb25CYWNrOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIG9uQ29uZmlybTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICB0aXRsZTogUHJvcFR5cGVzLm5vZGUuaXNSZXF1aXJlZCxcbiAgICBjb250ZW50OiBQcm9wVHlwZXMubm9kZS5pc1JlcXVpcmVkXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge2lubmVyUmVmLCBvbkJhY2ssIHRpdGxlLCBjb250ZW50fSA9IHRoaXMucHJvcHNcblxuICAgIGNvbnN0IGJ1dHRvbnMgPSAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8RGVmYXVsdEJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgb25DbGljaz17b25CYWNrfT5cbiAgICAgICAgICBHbyBCYWNrXG4gICAgICAgIDwvRGVmYXVsdEJ1dHRvbj5cbiAgICAgICAgPFJlZEJ1dHRvbiB0eXBlPVwic3VibWl0XCI+WWVzLCBDYW5jZWw8L1JlZEJ1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIClcblxuICAgIHJldHVybiAoXG4gICAgICA8RGlhbG9nXG4gICAgICAgIGlubmVyUmVmPXtpbm5lclJlZn1cbiAgICAgICAgdGl0bGU9e3RpdGxlfVxuICAgICAgICBidXR0b25zPXtidXR0b25zfVxuICAgICAgICBvblN1Ym1pdD17dGhpcy5oYW5kbGVTdWJtaXR9XG4gICAgICAgIHdpZHRoPVwiNTAwcHhcIlxuICAgICAgPlxuICAgICAgICB7Y29udGVudH1cbiAgICAgIDwvRGlhbG9nPlxuICAgIClcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuaGFuZGxlRXNjLCBmYWxzZSlcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuaGFuZGxlRXNjLCBmYWxzZSlcbiAgfVxuXG4gIGhhbmRsZVN1Ym1pdCA9IGUgPT4ge1xuICAgIGNvbnN0IHtvbkNvbmZpcm19ID0gdGhpcy5wcm9wc1xuXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgb25Db25maXJtKClcbiAgfVxuXG4gIGhhbmRsZUVzYyA9IGUgPT4ge1xuICAgIGNvbnN0IHtvbkNvbmZpcm19ID0gdGhpcy5wcm9wc1xuXG4gICAgLy8gRXNjIGtleVxuICAgIGlmIChlLmtleUNvZGUgPT09IDI3KSB7XG4gICAgICBvbkNvbmZpcm0oKVxuICAgIH1cbiAgfVxufVxuIl19